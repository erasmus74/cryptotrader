version: "3.2"

services:

    botenv:
        image: meetri/cryptocoin:latest
        hostname: cryptotrader
        networks:
            - afrontend
            - backend 
        env_file:
            - mysecrets.env
        environment:
            INFLUXDB_HOST: "db_influxdb"
            REDIS_HOST: "db_redis"
            PGHOST: "db_postgresql"
            LC_ALL: "en_US.utf-8"
            LANG: "en_US.utf-8"
        volumes:
            - type: bind
              source: /mnt/shared_data/cryptotrader/botenv
              target: /opt/dev
        deploy:
            replicas: 1
            resources:
                limits:
                    cpus: "1"
                    memory: 512mb
            placement:
                constraints: [ node.role==manager ]
            labels:
                - "traefik.port=5000"
                - "traefik.frontend.entryPoints=http"
                - "traefik.frontend.rule=Host:viewer.cryptotraderai.com"
                - "traefik.docker.network=afrontend"


    #this is technically all that's needed for the bot trader. Contains data for all markets
    #for redundancy, this is ran in a separate container from the order-scraper
    summary-scraper:
        image: meetri/cryptocoin:latest
        hostname: crypto-scraper
        networks:
            - backend 
        env_file:
            - mysecrets.env
        environment:
            DEBUGMODE: "true"
            GET_MARKET_SUMMARY: "true"
            JOB: "nodejs_websocket"
            #force exit the container to refresh websocket connection
            FORCE_EXIT: 30
            QUEUE: "marketqueue"
            MARKET_POLL_INTERVAL: 3000
            TA_INTERVAL: 30000
            INFLUXDB_HOST: "db_influxdb"
            REDIS_HOST: "db_redis"
            REDIS_PORT: 6379
            PGHOST: "db_postgresql"
        deploy:
            replicas: 1
            resources:
                limits:
                    cpus: "1"
                    memory: 512mb


    #for faster updates add currency pair to the market_list
    order-scraper:
        image: meetri/cryptocoin:latest
        hostname: crypto-scraper
        networks:
            - backend 
        env_file:
            - mysecrets.env
        environment:
            DEBUGMODE: "true"
            GET_MARKET_ORDERS: "true"
            MARKET_LIST: USDT-BTC USDT-ETH USDT-LTC USDT-XRP 
            JOB: "nodejs_websocket"
            FORCE_EXIT: 30
            QUEUE: "marketqueue"
            REDIS_HOST: "db_redis"
            REDIS_PORT: 6379
            PGHOST: "db_postgresql"
        deploy:
            replicas: 1
            resources:
                limits:
                    cpus: "1"
                    memory: 512mb


    #get market data from redis and do bulk writes to influxdb
    coin-saver:
        image: meetri/cryptocoin:latest
        hostname: crypto-scraper
        networks:
            - backend 
        env_file:
            - mysecrets.env
        environment:
            JOB: "save_marketdata"
            QUEUE: "marketqueue"
            WORKERS: 1
            TA_WORKERS: 0
            MARKETLIST: USDT-BTC USDT-ETH USDT-LTC
            INFLUXDB_HOST: "db_influxdb"
            REDIS_HOST: "db_redis"
            REDIS_PORT: 6379
            PGHOST: "db_postgresql"
        deploy:
            replicas: 1
            resources:
                limits:
                    cpus: "1"
                    memory: 1g

            
networks:
    afrontend:
        external: true
    backend:
        external: true
